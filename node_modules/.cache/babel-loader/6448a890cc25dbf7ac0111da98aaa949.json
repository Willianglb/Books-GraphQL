{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\willian.botelho\\\\Documents\\\\Meus programas GITHUB\\\\GraphQL\\\\Projeto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\willian.botelho\\\\Documents\\\\Meus programas GITHUB\\\\GraphQL\\\\Projeto\\\\src\\\\containers\\\\BookCreator.js\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useQuery, useMutation } from \"react-apollo\";\nimport * as queries from \"../api/queries\";\nimport * as mutations from \"../api/mutations\";\nimport './style.css';\n\nfunction BookCreator() {\n  var _this = this;\n\n  var _useQuery = useQuery(queries.AUTHORS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useMutation = useMutation(mutations.ADD_BOOK),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addBook = _useMutation2[0];\n\n  var _useFormik = useFormik({\n    initialValues: {\n      bookTitle: \"\",\n      authorId: \"\"\n    },\n    validationSchema: yup.object({\n      bookTitle: yup.string().required(\"O título do livro é obrigatório\"),\n      authorId: yup.string().required(\"O nome do autor é obrigatório\")\n    }),\n    onSubmit: function onSubmit(values, actions) {\n      addBook({\n        variables: {\n          title: values.bookTitle,\n          authorsId: [values.authorId]\n        },\n        refetchQueries: [{\n          query: queries.BOOKS\n        }]\n      });\n      actions.setValues({\n        bookTitle: \"\",\n        authorId: \"\"\n      }, false);\n    }\n  }),\n      getFieldProps = _useFormik.getFieldProps,\n      touched = _useFormik.touched,\n      errors = _useFormik.errors,\n      isValid = _useFormik.isValid,\n      handleSubmit = _useFormik.handleSubmit;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    }, \"Carregando...\");\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    }, error.message);\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"T\\xEDtulo do livro\",\n    autoComplete: \"off\"\n  }, getFieldProps(\"bookTitle\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), touched.bookTitle && errors.bookTitle ? /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, errors.bookTitle) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", Object.assign({}, getFieldProps(\"authorId\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Selecione um autor\"), data.authors.map(function (author) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: author.id,\n      value: author.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, author.name);\n  })), touched.authorId && errors.authorId ? /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, errors.authorId) : null), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Adicionar\"));\n}\n\nexport default BookCreator;","map":{"version":3,"sources":["C:/Users/willian.botelho/Documents/Meus programas GITHUB/GraphQL/Projeto/src/containers/BookCreator.js"],"names":["React","useFormik","yup","useQuery","useMutation","queries","mutations","BookCreator","AUTHORS","loading","error","data","ADD_BOOK","addBook","initialValues","bookTitle","authorId","validationSchema","object","string","required","onSubmit","values","actions","variables","title","authorsId","refetchQueries","query","BOOKS","setValues","getFieldProps","touched","errors","isValid","handleSubmit","message","authors","map","author","id","name"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useQuery, useMutation } from \"react-apollo\";\r\nimport * as queries from \"../api/queries\";\r\nimport * as mutations from \"../api/mutations\";\r\nimport './style.css';\r\n\r\nfunction BookCreator() {\r\n  const { loading, error, data } = useQuery(queries.AUTHORS);\r\n  const [addBook] = useMutation(mutations.ADD_BOOK);\r\n  const { getFieldProps, touched, errors, isValid, handleSubmit } = useFormik({\r\n    initialValues: {\r\n      bookTitle: \"\",\r\n      authorId: \"\"\r\n    },\r\n    validationSchema: yup.object({\r\n      bookTitle: yup.string().required(\"O título do livro é obrigatório\"),\r\n      authorId: yup.string().required(\"O nome do autor é obrigatório\")\r\n    }),\r\n    onSubmit: (values, actions) => {\r\n      addBook({\r\n        variables: {\r\n          title: values.bookTitle,\r\n          authorsId: [values.authorId]\r\n        },\r\n        refetchQueries: [{ query: queries.BOOKS }]\r\n      });\r\n      actions.setValues(\r\n        {\r\n          bookTitle: \"\",\r\n          authorId: \"\"\r\n        },\r\n        false\r\n      );\r\n    }\r\n  });\r\n  if (loading) {\r\n    return <h1>Carregando...</h1>;\r\n  }\r\n  if (error) {\r\n    return <h1>{error.message}</h1>;\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Título do livro\"\r\n          autoComplete=\"off\"\r\n          {...getFieldProps(\"bookTitle\")}\r\n        />\r\n        {touched.bookTitle && errors.bookTitle ? (\r\n          <small>{errors.bookTitle}</small>\r\n        ) : null}\r\n      </div>\r\n      <div>\r\n        <select {...getFieldProps(\"authorId\")}>\r\n          <option value=\"\" disabled={true}>\r\n            Selecione um autor\r\n          </option>\r\n          {data.authors.map(author => {\r\n            return (\r\n              <option key={author.id} value={author.id}>\r\n                {author.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        {touched.authorId && errors.authorId ? (\r\n          <small>{errors.authorId}</small>\r\n        ) : null}\r\n      </div>\r\n      <button type=\"submit\" disabled={!isValid}>\r\n        Adicionar\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default BookCreator;\r\n"]},"metadata":{},"sourceType":"module"}